plot(mod2_weibull)
mod2_weibull <- mixfit(error, ncomp = 4, family = 'norm')
mod2_weibull
plot(mod2_weibull)
library('dplyr')
library('censReg')
library('moments')
library('ggplot2')
library('ggpubr')
library("mixR")
data <- readxl::read_xlsx("hypothetical_data_set.xlsx",2, skip = 1)
data <- data[,2:9]
hist(data$`Used amount`)
#calculated dU_t
lagged_use <- data %>%
group_by(Client) %>%
mutate(dU = `Used amount` - lag(`Used amount`))
months_used <- tally(data%>%group_by(Client))$n
maturities <- data %>% group_by(Client) %>% slice(1)
plot(hist(maturities$Maturity))
hist(months_used)
hist(lagged_use$dU)
hist(data$`Used amount`, freq = FALSE)
#Initial use seems to follow uniform distr
first_utilization <- data %>%
group_by(Client) %>%
slice(1) #%>%
#select(`Used amount`)
hist(first_utilization$`Used amount`)
#Filter out constant U_t's
filtered_df <- data %>%
group_by(Client) %>%
filter(length(unique(`Used amount`)) > 1) %>%
ungroup()
lagged_use_filtered <- filtered_df %>%
group_by(Client) %>%
mutate(dU = `Used amount` - lag(`Used amount`))
hist((lagged_use_filtered$`dU`), freq = FALSE)
plot(density(na.omit(lagged_use_filtered$dU)))
qqnorm(lagged_use_filtered$dU)
qqline(lagged_use_filtered$dU)
kurtosis(na.omit(lagged_use_filtered$dU))
#How many clients use the credit line more than once?
num_clients_filter <- filtered_df %>% summarise(NumClients = n_distinct(Client))
num_clients <- data %>% summarise(numClients = n_distinct(Client))
num_clients - num_clients_filter
#Single observation clients
num_single <- data %>% group_by(Client) %>% filter(n() == 1) %>% summarise(numClients = n_distinct(Client)) %>% count(numClients)
#Estimated percentage of credit line users
p <- as.numeric((num_clients - num_clients_filter + num_single$n) / (num_clients - num_single$n))
#Autocorrelation U_t
autoCorr <- filtered_df %>% group_by(Client) %>% summarise(Autocorrelation = acf(`Used amount`, plot = FALSE)$acf[2])
summary(autoCorr[2])
hist(autoCorr$Autocorrelation)
#Autocorrelation dU_t
lagged_use_filtered <- lagged_use_filtered %>% filter(!is.na(dU))
autoCorrdU <- lagged_use_filtered %>% group_by(Client) %>% summarise(Autocorrelation = acf(dU, plot = FALSE)$acf[2])
summary(autoCorrdU[2])
hist(autoCorrdU$Autocorrelation)
#(1) We see two types of clients:
#       type 1: Use credit line once, don't touch again (~20% of clients)
#       type 2: Use credit line more often, high autocorrelation (Tobit model?, ~80% of clients)
#(2) Initial amount used seems to be Unif(0,1)
#(3) No ACF in dU
#(4) For type 2 clients, dU seems to follow a normal distr around (-0.2;0.2) but has thick tails
#    Ideas: Mixture of normals / Truncated normal + other distr for tails
#    Problem: U in [0,1], thin tails make sense, could be a result of TOBIT
#DGP idea:
#(1) U_0 ~ Unif[0,1]
#(2) eps_t ~ Norm(mu,sigma^2)
#(3) split up U_t into cases: U_t =
#     (i)    1              , if phi * U_{t-1} + eps_t >= 1
#     (ii)   0              , if phi * U_{t-1} + eps_t <= 0
#     (iii)  phi * U_{t-1} + eps_t, otherwise
filtered_df <- data %>%
group_by(Client) %>%
filter(n_distinct(`Used amount`) > 1) %>%
ungroup()
lagged_use_filtered <- filtered_df %>%
group_by(Client) %>%
mutate(dU = `Used amount` - lag(`Used amount`))
# U_t = phi*U_{t-1} + epsilon_t
lag_df <- lagged_use_filtered %>% group_by(Client) %>% mutate(`Lag used` = lag(`Used amount`))
Y <- lag_df$`Used amount`[1:38567]
X <- lag_df$`Lag used`[1:38567]
modeldata <- na.omit(as.data.frame(cbind(Y,X)))
tobit_model <- censReg(Y ~ X, left = 0, right = 1, data = modeldata)
summary(tobit_model)
error <- modeldata$Y - modeldata$X * tobit_model$estimate[2] - tobit_model$estimate[1]
plot(density(error^2))
qqnorm(y = error)
qqline(y = error, col = 2)
###########################################
#Some of the type 2 clients seem more active in their use
#Plot of means does not give anything special, SD plot does (mixture of weibull/other)
filtered_df <- filtered_df %>%
group_by(Client) %>%
mutate(dU = `Used amount` - lag(`Used amount`))
filtered_df <- filtered_df %>%
filter(!is.na(`dU`))
c3 <- filtered_df %>% group_by(Client) %>% mutate(sds = sd(`Used amount`)) %>% slice(1)
c4 <- filtered_df %>% group_by(Client) %>%
filter(!is.na(dU)) %>% filter(n() > 1) %>%
mutate(sds = sd(dU)) %>% slice(1)
means <- c4
hist(means$sds^2)
plot(density(means$sds^2))
modes <- function(d){
i <- which(diff(sign(diff(d$y))) < 0) + 1
data.frame(x = d$x[i], y = d$y[i])
}
abline(v =modes(density(means$sds^2))$x)
abline(v = 0)
#Plot some clients utilization over time
dataSubset <- filtered_df %>% filter(Client >= 0 & Client < 5)
plot <- ggplot(dataSubset, aes(x = as.Date(`Reporting date`,"%d-%m-%Y"), y = `dU`, group = Client, color = as.factor(Client))) +
geom_line() +
geom_point() +
labs(title = "Utilization Time Series for a subset of clients",
x = "Client",
y = "Used Amount") +
theme_minimal()
print(plot)
#Model the variance with mixR mixed weibulls, performs best in all 3 cirteria
x <- means$sds^2
mod1_weibull <- mixfit(x, ncomp = 2, family = 'weibull')
mod1_weibull
plot(mod1_weibull)
#Within type 2 clients, we make further distinctions:
# Type 1: Low average variance
# Type 2: High average variance
# IDEA: model this as state models (state 1 = low var, state 2 = high var)
#########################################################################
#Filter those clients whose contracts have already matured
#Last reporting date is 31-12-2021
#Clients whose contracts are either finished or cancelled
data_fin_can <- data %>%
group_by(Client) %>%
filter((last(`Reporting date`) != '31-12-2021') | (last(`Reporting date`) == last(`Maturity date`)))
#add change in used amount
data_fin_can <- data_fin_can %>%
group_by(Client) %>%
mutate(dU = `Used amount` - lag(`Used amount`))
hist(data_fin_can$`Used amount`, freq = FALSE)
#Filter out constant use
data_nonconst <- data_fin_can %>%
group_by(Client) %>%
filter(length(unique(`Used amount`)) > 1) %>%
ungroup()
num_clients_filter <- data_nonconst %>% summarise(NumClients = n_distinct(Client))
num_clients <- data_fin_can %>% summarise(numClients = n_distinct(Client))
#Probability of using line constantly (type 2)
p <- num_clients_filter$NumClients / sum(num_clients$numClients)
c5 <- data_nonconst %>% group_by(Client) %>% mutate(vars = var(`Used amount`)) %>% slice(1)
plot(density(c5$vars))
#Gamma performs better on 3 comp, weibull on 2 comp
x <- (c5$vars)
mod1_weibull <- mixfit(x, ncomp = 3, family = 'weibull')
mod1_weibull
plot(mod1_weibull)
lag_nonconst <- data_nonconst %>% group_by(Client) %>% mutate(`Lag used` = lag(`Used amount`))
Y <- lag_nonconst$`Used amount`[1:38567]
X <- lag_nonconst$`Lag used`[1:38567]
modeldata <- na.omit(as.data.frame(cbind(Y,X)))
tobit_model <- censReg(X ~ Y, left = 0, right = 1, data = modeldata)
summary(tobit_model)
error <- modeldata$X - modeldata$Y * tobit_model$estimate[2] - tobit_model$estimate[1]
plot(density(error^2))
qqnorm(y = error)
qqline(y = error, col = 2)
mod2_weibull <- mixfit(error, ncomp = 4, family = 'norm')
mod2_weibull
plot(mod2_weibull)
#Gamma performs better on 3 comp, weibull on 2 comp
x <- (c5$vars)
mod1_weibull <- mixfit(x, ncomp = 2, family = 'gamma')
mod1_weibull
plot(mod1_weibull)
plot(hist(maturities$Maturity))
hist(months_used)
hist(lagged_use$dU)
hist(data$`Used amount`, freq = FALSE)
#Initial use seems to follow uniform distr
first_utilization <- data %>%
group_by(Client) %>%
slice(1) #%>%
library('dplyr')
library('censReg')
library('moments')
library('ggplot2')
library('ggpubr')
library("mixR")
data <- readxl::read_xlsx("hypothetical_data_set.xlsx",2, skip = 1)
data <- data[,2:9]
hist(data$`Used amount`)
#calculated dU_t
lagged_use <- data %>%
group_by(Client) %>%
mutate(dU = `Used amount` - lag(`Used amount`))
months_used <- tally(data%>%group_by(Client))$n
maturities <- data %>% group_by(Client) %>% slice(1)
plot(hist(maturities$Maturity))
hist(months_used)
hist(lagged_use$dU)
hist(data$`Used amount`, freq = FALSE)
#Initial use seems to follow uniform distr
first_utilization <- data %>%
group_by(Client) %>%
slice(1) #%>%
#select(`Used amount`)
hist(first_utilization$`Used amount`)
#Filter out constant U_t's
filtered_df <- data %>%
group_by(Client) %>%
filter(length(unique(`Used amount`)) > 1) %>%
ungroup()
lagged_use_filtered <- filtered_df %>%
group_by(Client) %>%
mutate(dU = `Used amount` - lag(`Used amount`))
hist((lagged_use_filtered$`dU`), freq = FALSE)
plot(density(na.omit(lagged_use_filtered$dU)))
qqnorm(lagged_use_filtered$dU)
qqline(lagged_use_filtered$dU)
kurtosis(na.omit(lagged_use_filtered$dU))
#How many clients use the credit line more than once?
num_clients_filter <- filtered_df %>% summarise(NumClients = n_distinct(Client))
num_clients <- data %>% summarise(numClients = n_distinct(Client))
num_clients - num_clients_filter
#Single observation clients
num_single <- data %>% group_by(Client) %>% filter(n() == 1) %>% summarise(numClients = n_distinct(Client)) %>% count(numClients)
#Estimated percentage of credit line users
p <- as.numeric((num_clients - num_clients_filter + num_single$n) / (num_clients - num_single$n))
#Autocorrelation U_t
autoCorr <- filtered_df %>% group_by(Client) %>% summarise(Autocorrelation = acf(`Used amount`, plot = FALSE)$acf[2])
summary(autoCorr[2])
hist(autoCorr$Autocorrelation)
#Autocorrelation dU_t
lagged_use_filtered <- lagged_use_filtered %>% filter(!is.na(dU))
autoCorrdU <- lagged_use_filtered %>% group_by(Client) %>% summarise(Autocorrelation = acf(dU, plot = FALSE)$acf[2])
summary(autoCorrdU[2])
hist(autoCorrdU$Autocorrelation)
#(1) We see two types of clients:
#       type 1: Use credit line once, don't touch again (~20% of clients)
#       type 2: Use credit line more often, high autocorrelation (Tobit model?, ~80% of clients)
#(2) Initial amount used seems to be Unif(0,1)
#(3) No ACF in dU
#(4) For type 2 clients, dU seems to follow a normal distr around (-0.2;0.2) but has thick tails
#    Ideas: Mixture of normals / Truncated normal + other distr for tails
#    Problem: U in [0,1], thin tails make sense, could be a result of TOBIT
#DGP idea:
#(1) U_0 ~ Unif[0,1]
#(2) eps_t ~ Norm(mu,sigma^2)
#(3) split up U_t into cases: U_t =
#     (i)    1              , if phi * U_{t-1} + eps_t >= 1
#     (ii)   0              , if phi * U_{t-1} + eps_t <= 0
#     (iii)  phi * U_{t-1} + eps_t, otherwise
filtered_df <- data %>%
group_by(Client) %>%
filter(n_distinct(`Used amount`) > 1) %>%
ungroup()
lagged_use_filtered <- filtered_df %>%
group_by(Client) %>%
mutate(dU = `Used amount` - lag(`Used amount`))
# U_t = phi*U_{t-1} + epsilon_t
lag_df <- lagged_use_filtered %>% group_by(Client) %>% mutate(`Lag used` = lag(`Used amount`))
Y <- lag_df$`Used amount`[1:38567]
X <- lag_df$`Lag used`[1:38567]
modeldata <- na.omit(as.data.frame(cbind(Y,X)))
tobit_model <- censReg(Y ~ X, left = 0, right = 1, data = modeldata)
summary(tobit_model)
error <- modeldata$Y - modeldata$X * tobit_model$estimate[2] - tobit_model$estimate[1]
plot(density(error^2))
qqnorm(y = error)
qqline(y = error, col = 2)
###########################################
#Some of the type 2 clients seem more active in their use
#Plot of means does not give anything special, SD plot does (mixture of weibull/other)
filtered_df <- filtered_df %>%
group_by(Client) %>%
mutate(dU = `Used amount` - lag(`Used amount`))
filtered_df <- filtered_df %>%
filter(!is.na(`dU`))
c3 <- filtered_df %>% group_by(Client) %>% mutate(sds = sd(`Used amount`)) %>% slice(1)
c4 <- filtered_df %>% group_by(Client) %>%
filter(!is.na(dU)) %>% filter(n() > 1) %>%
mutate(sds = sd(dU)) %>% slice(1)
means <- c4
hist(means$sds^2)
plot(density(means$sds^2))
modes <- function(d){
i <- which(diff(sign(diff(d$y))) < 0) + 1
data.frame(x = d$x[i], y = d$y[i])
}
abline(v =modes(density(means$sds^2))$x)
abline(v = 0)
#Plot some clients utilization over time
dataSubset <- filtered_df %>% filter(Client >= 0 & Client < 5)
plot <- ggplot(dataSubset, aes(x = as.Date(`Reporting date`,"%d-%m-%Y"), y = `dU`, group = Client, color = as.factor(Client))) +
geom_line() +
geom_point() +
labs(title = "Utilization Time Series for a subset of clients",
x = "Client",
y = "Used Amount") +
theme_minimal()
print(plot)
#Model the variance with mixR mixed weibulls, performs best in all 3 cirteria
x <- means$sds^2
mod1_weibull <- mixfit(x, ncomp = 2, family = 'weibull')
mod1_weibull
plot(mod1_weibull)
#Within type 2 clients, we make further distinctions:
# Type 1: Low average variance
# Type 2: High average variance
# IDEA: model this as state models (state 1 = low var, state 2 = high var)
#########################################################################
#Filter those clients whose contracts have already matured
#Last reporting date is 31-12-2021
#Clients whose contracts are either finished or cancelled
data_fin_can <- data %>%
group_by(Client) %>%
filter((last(`Reporting date`) != '31-12-2021') | (last(`Reporting date`) == last(`Maturity date`)))
#add change in used amount
data_fin_can <- data_fin_can %>%
group_by(Client) %>%
mutate(dU = `Used amount` - lag(`Used amount`))
hist(data_fin_can$`Used amount`, freq = FALSE)
#Filter out constant use
data_nonconst <- data_fin_can %>%
group_by(Client) %>%
filter(length(unique(`Used amount`)) > 1) %>%
ungroup()
num_clients_filter <- data_nonconst %>% summarise(NumClients = n_distinct(Client))
num_clients <- data_fin_can %>% summarise(numClients = n_distinct(Client))
#Probability of using line constantly (type 2)
p <- num_clients_filter$NumClients / sum(num_clients$numClients)
c5 <- data_nonconst %>% group_by(Client) %>% mutate(vars = var(`Used amount`)) %>% slice(1)
plot(density(c5$vars))
#Gamma performs better on 3 comp, weibull on 2 comp
x <- (c5$vars)
mod1_weibull <- mixfit(x, ncomp = 2, family = 'gamma')
mod1_weibull
plot(mod1_weibull)
lag_nonconst <- data_nonconst %>% group_by(Client) %>% mutate(`Lag used` = lag(`Used amount`))
Y <- lag_nonconst$`Used amount`[1:38567]
X <- lag_nonconst$`Lag used`[1:38567]
modeldata <- na.omit(as.data.frame(cbind(Y,X)))
tobit_model <- censReg(X ~ Y, left = 0, right = 1, data = modeldata)
summary(tobit_model)
error <- modeldata$X - modeldata$Y * tobit_model$estimate[2] - tobit_model$estimate[1]
plot(density(error^2))
qqnorm(y = error)
qqline(y = error, col = 2)
mod2_weibull <- mixfit(error, ncomp = 4, family = 'norm')
mod2_weibull
plot(mod2_weibull)
#Gamma performs better on 3 comp, weibull on 2 comp
x <- (c5$vars)
mod1_weibull <- mixfit(x, ncomp = 2, family = 'gamma')
mod1_weibull
mod1_weibull <- mixfit(x, ncomp = 2, family = 'weibull')
mod1_weibull
plot(mod1_weibull)
View(data_fin_can)
View(data_fin_can)
hist(data_fin_can$`Used amount`, freq = FALSE)
hist(data_fin_can$dU)
summary(data_fin_can$dU)
lag_nonconst <- data_nonconst %>% group_by(Client) %>% mutate(`Lag used` = lag(`Used amount`))
Y <- lag_nonconst$`Used amount`[1:38567]
X <- lag_nonconst$`Lag used`[1:38567]
modeldata <- (as.data.frame(cbind(Y,X)))
tobit_model <- censReg(X ~ Y, left = 0, right = 1, data = modeldata)
summary(tobit_model)
error <- modeldata$X - modeldata$Y * tobit_model$estimate[2] - tobit_model$estimate[1]
cbind(lag_nonconst, error
lag_nonconst <- cbind(lag_nonconst, error)
lag_nonconst <- cbind(lag_nonconst, error)
lag_nonconst <- data_nonconst %>% group_by(Client) %>% mutate(`Lag used` = lag(`Used amount`))
Y <- lag_nonconst$`Used amount`[1:38567]
X <- lag_nonconst$`Lag used`[1:38567]
lag_nonconst <- data_nonconst %>% group_by(Client) %>% mutate(`Lag used` = lag(`Used amount`))
Y <- lag_nonconst$`Used amount`[1:19389]
X <- lag_nonconst$`Lag used`[1:19389]
modeldata <- (as.data.frame(cbind(Y,X)))
tobit_model <- censReg(X ~ Y, left = 0, right = 1, data = modeldata)
summary(tobit_model)
error <- modeldata$X - modeldata$Y * tobit_model$estimate[2] - tobit_model$estimate[1]
lag_nonconst <- cbind(lag_nonconst, error)
View(lag_nonconst)
#Error analysis
error_data <- na.omit(lag_nonconst)
c6 <- error_data %>% group_by(Client) %>% mutate(vars = var(`Used amount`)) %>% slice(1)
View(c6)
plot(density(c6$vars))
View(c6)
c6 <- na.omit(error_data %>% group_by(Client) %>% mutate(vars = var(`Used amount`)) %>% slice(1))
plot(density(c6$vars))
plot(hist(c6$vars))
x <- (c6$vars)
mod2_weibull <- mixfit(x, ncomp = 2, family = 'weibull')
mod2_weibull
plot(mod2_weibull)
mod2_weibull <- mixfit(x, ncomp = 1, family = 'weibull')
mod2_weibull
plot(mod2_weibull)
mod2_weibull <- mixfit(x, ncomp = 1, family = 'gamma')
mod2_weibull
plot(mod2_weibull)
mod2_weibull <- mixfit(x, ncomp = 2, family = 'gamma')
mod2_weibull
plot(mod2_weibull)
mod2_weibull <- mixfit(x, ncomp = 2, family = 'lnorm')
mod2_weibull
plot(mod2_weibull)
#Error analysis
error_data <- na.omit(lag_nonconst)
c6 <- na.omit(error_data %>% group_by(Client) %>% mutate(vars = sd(`Used amount`)) %>% slice(1))
plot(hist(c6$vars))
x <- (c6$vars)
mod2_weibull <- mixfit(x, ncomp = 2, family = 'lnorm')
mod2_weibull
plot(mod2_weibull)
mod2_weibull <- mixfit(x, ncomp = 2, family = 'weibull')
mod2_weibull
plot(mod2_weibull)
x <- (c6$vars)
mod2_weibull <- mixfit(x, ncomp = 2, family = 'gamma')
mod2_weibull
plot(mod2_weibull)
x <- (c6$vars)
mod2_weibull <- mixfit(x, ncomp = 2, family = 'weibull')
mod2_weibull
plot(mod2_weibull)
View(c6)
View(data_nonconst)
View(data_nonconst)
#Error analysis
c6 <- na.omit(lag_nonconst %>% group_by(Client) %>% mutate(vars = sd(`Used amount`)) %>% slice(1))
plot(hist(c6$vars))
#Error analysis
c6 <- (lag_nonconst %>% group_by(Client) %>% mutate(vars = sd(`Used amount`)) %>% slice(1))
View(c6)
plot(hist(c6$vars))
x <- (c6$vars)
mod2_weibull <- mixfit(x, ncomp = 2, family = 'weibull')
mod2_weibull
plot(mod2_weibull)
mod2_weibull <- mixfit(x, ncomp = 3, family = 'weibull')
mod2_weibull
plot(mod2_weibull)
mod2_weibull <- mixfit(x, ncomp = 3, family = 'gamma')
mod2_weibull
plot(mod2_weibull)
mod2_weibull <- mixfit(x, ncomp = 3, family = 'weibull')
mod2_weibull
plot(mod2_weibull)
mod2_weibull <- mixfit(x, ncomp = 3, family = 'lnorm')
mod2_weibull
plot(mod2_weibull)
?mixfit
x <- (c6$vars)
mod2_weibull <- mixfit(x, ncomp = 3, family = 'lnorm', max_iter = 1000)
mod2_weibull
plot(mod2_weibull)
mod2_weibull <- mixfit(x, ncomp = 3, family = 'lnorm', max_iter = 10000)
mod2_weibull
plot(mod2_weibull)
mod2_weibull <- mixfit(x, ncomp = 3, family = 'gamma', max_iter = 10000)
mod2_weibull
plot(mod2_weibull)
mod2_weibull <- mixfit(x, ncomp = 3, family = 'weibull', max_iter = 10000)
mod2_weibull
plot(mod2_weibull)
mod2_weibull <- mixfit(x, ncomp = 3, family = 'gamma', max_iter = 10000)
mod2_weibull
plot(mod2_weibull)
#Error analysis
c6 <- (lag_nonconst %>% group_by(Client) %>% mutate(vars = var(`Used amount`)) %>% slice(1))
plot(hist(c6$vars))
x <- (c6$vars)
mod2_weibull <- mixfit(x, ncomp = 3, family = 'gamma', max_iter = 10000)
mod2_weibull
plot(mod2_weibull)
mod2_weibull <- mixfit(x, ncomp = 3, family = 'weibull', max_iter = 10000)
mod2_weibull
plot(mod2_weibull)
mod2_weibull <- mixfit(x, ncomp = 3, family = 'gamma', max_iter = 10000)
mod2_weibull
plot(mod2_weibull)
mod2_weibull <- mixfit(x, ncomp = 3, family = 'lnorm', max_iter = 10000)
mod2_weibull
plot(mod2_weibull)
mod2_weibull <- mixfit(x, ncomp = 3, family = 'gamma', max_iter = 10000)
mod2_weibull
plot(mod2_weibull)
plot(mod2_weibull)
#Error analysis
c6 <- (lag_nonconst %>% group_by(Client) %>% mutate(vars = var(`Used amount`)) %>% slice(1))
library('dplyr')
library('censReg')
library('moments')
library('ggplot2')
library('ggpubr')
library("mixR")
data <- readxl::read_xlsx("hypothetical_data_set.xlsx",2, skip = 1)
#Error analysis
c6 <- (lag_nonconst %>% group_by(Client) %>% mutate(vars = var(`Used amount`)) %>% slice(1))
plot(hist(c6$vars))
x <- (c6$vars)
mod2_weibull <- mixfit(x, ncomp = 3, family = 'gamma', max_iter = 10000)
mod2_weibull
plot(mod2_weibull)
