}
volatility <- rmixgamma(1, mod2_weibull$pi, mod2_weibull$mu, mod2_weibull$sd)
utilization <- simulate_client_utilization(pool_coef, tau, j, volatility, type_var)
NPV_matrix[i, j] <- simulate_option_cost(euri_sim_joint, ftp_sim_joint, j, tau, utilization, FTP_0) * 10^6
EOS_denom_matrix[i, j] <- simulate_eos_denom(tau, j, euri_sim_joint, utilization) / 10^6
}
}
alpha <- 0.99
for(j in 1:10){
npv_alphas_sim[j] <- (sort(-NPV_matrix[, j]))[ceiling(N * alpha)]
EOS_matrix[, j] <- npv_alphas_sim[j] * EOS_denom_matrix[, j]
}
summary(EOS_matrix)
npv_alphas_sim
set.seed(1)
N <- 20000
NPV_matrix <- matrix(data = NA, nrow = N, ncol = 10)
EOS_denom_matrix <- matrix(data = NA, nrow = N, ncol = 10)
EOS_matrix <- matrix(data = NA, nrow = N, ncol = 10)
npv_alphas_sim <- rep(NA, 10)
for(j in 1:10){
FTP_0 <- ftp_2y[120] + 0.0001 * (j - 2)
for(i in 1:N){
type_var <- rbinom(1, 1, p_typeone - 0.05)
cancel_client <- rbinom(1,1, p_cancel)
tau <- 1
sim_joint <- vasi_joint_sim(jointpar_all, j*12, er[120], ftp_2y[120])
ftp_sim_joint <- sim_joint[, 2]
euri_sim_joint <- sim_joint[, 1]
if(cancel_client == 1){
tau <- rbeta(1, beta_coef[1], beta_coef[2])
}
volatility <- rmixgamma(1, mod2_weibull$pi, mod2_weibull$mu, mod2_weibull$sd)
utilization <- simulate_client_utilization(pool_coef, tau, j, volatility, type_var)
NPV_matrix[i, j] <- simulate_option_cost(euri_sim_joint, ftp_sim_joint, j, tau, utilization, FTP_0) * 10^6
EOS_denom_matrix[i, j] <- simulate_eos_denom(tau, j, euri_sim_joint, utilization) / 10^6
}
}
alpha <- 0.99
for(j in 1:10){
npv_alphas_sim[j] <- (sort(-NPV_matrix[, j]))[ceiling(N * alpha)]
EOS_matrix[, j] <- npv_alphas_sim[j] * EOS_denom_matrix[, j]
}
summary(EOS_matrix)
npv_alphas_sim
alpha <- 0.99
for(j in 1:10){
npv_alphas_sim[j] <- (sort(-NPV_matrix[, j]))[ceiling(N * alpha)]
EOS_matrix[, j] <- npv_alphas_sim[j] * EOS_denom_matrix[, j]
}
summary(EOS_matrix)
set.seed(1)
N <- 20000
NPV_matrix <- matrix(data = NA, nrow = N, ncol = 10)
EOS_denom_matrix <- matrix(data = NA, nrow = N, ncol = 10)
EOS_matrix <- matrix(data = NA, nrow = N, ncol = 10)
npv_alphas_sim <- rep(NA, 10)
for(j in 1:10){
FTP_0 <- ftp_2y[120] + 0.0001 * (j - 2)
for(i in 1:N){
type_var <- rbinom(1, 1, p_typeone)
cancel_client <- rbinom(1,1, p_cancel)
tau <- 1
sim_joint <- vasi_joint_sim(jointpar_all*1.01, j*12, er[120], ftp_2y[120])
ftp_sim_joint <- sim_joint[, 2]
euri_sim_joint <- sim_joint[, 1]
if(cancel_client == 1){
tau <- rbeta(1, beta_coef[1], beta_coef[2])
}
volatility <- rmixgamma(1, mod2_weibull$pi, mod2_weibull$mu, mod2_weibull$sd)
utilization <- simulate_client_utilization(pool_coef, tau, j, volatility, type_var)
NPV_matrix[i, j] <- simulate_option_cost(euri_sim_joint, ftp_sim_joint, j, tau, utilization, FTP_0) * 10^6
EOS_denom_matrix[i, j] <- simulate_eos_denom(tau, j, euri_sim_joint, utilization) / 10^6
}
}
alpha <- 0.99
for(j in 1:10){
npv_alphas_sim[j] <- (sort(-NPV_matrix[, j]))[ceiling(N * alpha)]
EOS_matrix[, j] <- npv_alphas_sim[j] * EOS_denom_matrix[, j]
}
summary(EOS_matrix)
npv_alphas_sim
set.seed(1)
N <- 20000
NPV_matrix <- matrix(data = NA, nrow = N, ncol = 10)
EOS_denom_matrix <- matrix(data = NA, nrow = N, ncol = 10)
EOS_matrix <- matrix(data = NA, nrow = N, ncol = 10)
npv_alphas_sim <- rep(NA, 10)
for(j in 1:10){
FTP_0 <- ftp_2y[120] + 0.0001 * (j - 2)
for(i in 1:N){
type_var <- rbinom(1, 1, p_typeone)
cancel_client <- rbinom(1,1, p_cancel)
tau <- 1
sim_joint <- vasi_joint_sim(jointpar_all, j*12, er[120]*1.01, ftp_2y[120]*1.01)
ftp_sim_joint <- sim_joint[, 2]
euri_sim_joint <- sim_joint[, 1]
if(cancel_client == 1){
tau <- rbeta(1, beta_coef[1], beta_coef[2])
}
volatility <- rmixgamma(1, mod2_weibull$pi, mod2_weibull$mu, mod2_weibull$sd)
utilization <- simulate_client_utilization(pool_coef, tau, j, volatility, type_var)
NPV_matrix[i, j] <- simulate_option_cost(euri_sim_joint, ftp_sim_joint, j, tau, utilization, FTP_0) * 10^6
EOS_denom_matrix[i, j] <- simulate_eos_denom(tau, j, euri_sim_joint, utilization) / 10^6
}
}
alpha <- 0.99
for(j in 1:10){
npv_alphas_sim[j] <- (sort(-NPV_matrix[, j]))[ceiling(N * alpha)]
EOS_matrix[, j] <- npv_alphas_sim[j] * EOS_denom_matrix[, j]
}
summary(EOS_matrix)
npv_alphas_sim
set.seed(1)
N <- 20000
NPV_matrix <- matrix(data = NA, nrow = N, ncol = 10)
EOS_denom_matrix <- matrix(data = NA, nrow = N, ncol = 10)
EOS_matrix <- matrix(data = NA, nrow = N, ncol = 10)
npv_alphas_sim <- rep(NA, 10)
for(j in 1:10){
FTP_0 <- ftp_2y[120] + 0.0001 * (j - 2)
for(i in 1:N){
type_var <- rbinom(1, 1, p_typeone*1.01)
cancel_client <- rbinom(1,1, p_cancel)
tau <- 1
sim_joint <- vasi_joint_sim(jointpar_all, j*12, er[120], ftp_2y[120])
ftp_sim_joint <- sim_joint[, 2]
euri_sim_joint <- sim_joint[, 1]
if(cancel_client == 1){
tau <- rbeta(1, beta_coef[1], beta_coef[2])
}
volatility <- rmixgamma(1, mod2_weibull$pi, mod2_weibull$mu, mod2_weibull$sd)
utilization <- simulate_client_utilization(pool_coef, tau, j, volatility, type_var)
NPV_matrix[i, j] <- simulate_option_cost(euri_sim_joint, ftp_sim_joint, j, tau, utilization, FTP_0) * 10^6
EOS_denom_matrix[i, j] <- simulate_eos_denom(tau, j, euri_sim_joint, utilization) / 10^6
}
}
pool_coef[2]
pool_coef[2]*1.01
pool_coef[1]*1.01
pool_coef[1]*1.01 / ( 1- pool_coef[2]*1.01)
pool_coef[1] / ( 1- pool_coef[2])
set.seed(1)
N <- 20000
NPV_matrix <- matrix(data = NA, nrow = N, ncol = 10)
EOS_denom_matrix <- matrix(data = NA, nrow = N, ncol = 10)
EOS_matrix <- matrix(data = NA, nrow = N, ncol = 10)
npv_alphas_sim <- rep(NA, 10)
for(j in 1:10){
FTP_0 <- ftp_2y[120] + 0.0001 * (j - 2)
for(i in 1:N){
type_var <- rbinom(1, 1, p_typeone)
cancel_client <- rbinom(1,1, p_cancel)
tau <- 1
sim_joint <- vasi_joint_sim(jointpar_all, j*12, er[120], ftp_2y[120])
ftp_sim_joint <- sim_joint[, 2]
euri_sim_joint <- sim_joint[, 1]
if(cancel_client == 1){
tau <- rbeta(1, beta_coef[1], beta_coef[2])
}
volatility <- rmixgamma(1, mod2_weibull$pi, mod2_weibull$mu, mod2_weibull$sd)
utilization <- simulate_client_utilization(pool_coef, tau, j, volatility, type_var)
NPV_matrix[i, j] <- simulate_option_cost(euri_sim_joint, ftp_sim_joint, j, tau, utilization, FTP_0) * 10^6
EOS_denom_matrix[i, j] <- simulate_eos_denom(tau, j, euri_sim_joint, utilization) / 10^6
}
}
alpha <- 0.99
for(j in 1:10){
npv_alphas_sim[j] <- (sort(-NPV_matrix[, j]))[ceiling(N * alpha)]
EOS_matrix[, j] <- npv_alphas_sim[j] * EOS_denom_matrix[, j]
}
median(EOS_matrix)
medians <- rep(NA,10)
medians <- rep(NA,10)
for(j in 1:10){
npv_alphas_sim[j] <- (sort(-NPV_matrix[, j]))[ceiling(N * alpha)]
EOS_matrix[, j] <- npv_alphas_sim[j] * EOS_denom_matrix[, j]
medians[j] <- median(EOS_matrix[, j])
}
summary(EOS_matrix)
set.seed(1)
N <- 20000
NPV_matrix <- matrix(data = NA, nrow = N, ncol = 10)
EOS_denom_matrix <- matrix(data = NA, nrow = N, ncol = 10)
EOS_matrix <- matrix(data = NA, nrow = N, ncol = 10)
npv_alphas_sim <- rep(NA, 10)
for(j in 1:10){
FTP_0 <- ftp_2y[120] + 0.0001 * (j - 2)
for(i in 1:N){
type_var <- rbinom(1, 1, p_typeone)
cancel_client <- rbinom(1,1, p_cancel)
tau <- 1
sim_joint <- vasi_joint_sim(jointpar_all, j*12, er[120], ftp_2y[120])
ftp_sim_joint <- sim_joint[, 2]
euri_sim_joint <- sim_joint[, 1]
if(cancel_client == 1){
tau <- rbeta(1, beta_coef[1], beta_coef[2])
}
volatility <- rmixgamma(1, mod2_weibull$pi, mod2_weibull$mu, mod2_weibull$sd)
utilization <- simulate_client_utilization(pool_coef, tau, j, volatility, type_var)
NPV_matrix[i, j] <- simulate_option_cost(euri_sim_joint, ftp_sim_joint, j, tau, utilization, FTP_0) * 10^6
EOS_denom_matrix[i, j] <- simulate_eos_denom(tau, j, euri_sim_joint, utilization) / 10^6
}
}
p_cancel <- 0.1766
set.seed(1)
N <- 20000
NPV_matrix <- matrix(data = NA, nrow = N, ncol = 10)
EOS_denom_matrix <- matrix(data = NA, nrow = N, ncol = 10)
EOS_matrix <- matrix(data = NA, nrow = N, ncol = 10)
npv_alphas_sim <- rep(NA, 10)
for(j in 1:10){
FTP_0 <- ftp_2y[120] + 0.0001 * (j - 2)
for(i in 1:N){
type_var <- rbinom(1, 1, p_typeone)
cancel_client <- rbinom(1,1, p_cancel)
tau <- 1
sim_joint <- vasi_joint_sim(jointpar_all, j*12, er[120], ftp_2y[120])
ftp_sim_joint <- sim_joint[, 2]
euri_sim_joint <- sim_joint[, 1]
if(cancel_client == 1){
tau <- rbeta(1, beta_coef[1], beta_coef[2])
}
volatility <- rmixgamma(1, mod2_weibull$pi, mod2_weibull$mu, mod2_weibull$sd)
utilization <- simulate_client_utilization(pool_coef, tau, j, volatility, type_var)
NPV_matrix[i, j] <- simulate_option_cost(euri_sim_joint, ftp_sim_joint, j, tau, utilization, FTP_0) * 10^6
EOS_denom_matrix[i, j] <- simulate_eos_denom(tau, j, euri_sim_joint, utilization) / 10^6
}
}
alpha <- 0.99
medians <- rep(NA,10)
for(j in 1:10){
npv_alphas_sim[j] <- (sort(-NPV_matrix[, j]))[ceiling(N * alpha)]
EOS_matrix[, j] <- npv_alphas_sim[j] * EOS_denom_matrix[, j]
medians[j] <- median(EOS_matrix[, j])
}
set.seed(1)
N <- 20000
NPV_matrix <- matrix(data = NA, nrow = N, ncol = 10)
EOS_denom_matrix <- matrix(data = NA, nrow = N, ncol = 10)
EOS_matrix <- matrix(data = NA, nrow = N, ncol = 10)
npv_alphas_sim <- rep(NA, 10)
for(j in 1:10){
FTP_0 <- ftp_2y[120] + 0.0001 * (j - 2)
for(i in 1:N){
type_var <- rbinom(1, 1, p_typeone*1.01)
cancel_client <- rbinom(1,1, p_cancel)
tau <- 1
sim_joint <- vasi_joint_sim(jointpar_all, j*12, er[120], ftp_2y[120])
ftp_sim_joint <- sim_joint[, 2]
euri_sim_joint <- sim_joint[, 1]
if(cancel_client == 1){
tau <- rbeta(1, beta_coef[1], beta_coef[2])
}
volatility <- rmixgamma(1, mod2_weibull$pi, mod2_weibull$mu, mod2_weibull$sd)
utilization <- simulate_client_utilization(pool_coef, tau, j, volatility, type_var)
NPV_matrix[i, j] <- simulate_option_cost(euri_sim_joint, ftp_sim_joint, j, tau, utilization, FTP_0) * 10^6
EOS_denom_matrix[i, j] <- simulate_eos_denom(tau, j, euri_sim_joint, utilization) / 10^6
}
}
alpha <- 0.99
medians1 <- rep(NA,10)
for(j in 1:10){
npv_alphas_sim[j] <- (sort(-NPV_matrix[, j]))[ceiling(N * alpha)]
EOS_matrix[, j] <- npv_alphas_sim[j] * EOS_denom_matrix[, j]
medians1[j] <- median(EOS_matrix[, j])
}
medians1 - medians
medians1
-4.818034e-06 * 10^5
(medians1 - medians) * 10^5
set.seed(1)
N <- 20000
NPV_matrix <- matrix(data = NA, nrow = N, ncol = 10)
EOS_denom_matrix <- matrix(data = NA, nrow = N, ncol = 10)
EOS_matrix <- matrix(data = NA, nrow = N, ncol = 10)
npv_alphas_sim <- rep(NA, 10)
for(j in 1:10){
FTP_0 <- ftp_2y[120] + 0.0001 * (j - 2)
for(i in 1:N){
type_var <- rbinom(1, 1, p_typeone*0.99)
cancel_client <- rbinom(1,1, p_cancel)
tau <- 1
sim_joint <- vasi_joint_sim(jointpar_all, j*12, er[120], ftp_2y[120])
ftp_sim_joint <- sim_joint[, 2]
euri_sim_joint <- sim_joint[, 1]
if(cancel_client == 1){
tau <- rbeta(1, beta_coef[1], beta_coef[2])
}
volatility <- rmixgamma(1, mod2_weibull$pi, mod2_weibull$mu, mod2_weibull$sd)
utilization <- simulate_client_utilization(pool_coef, tau, j, volatility, type_var)
NPV_matrix[i, j] <- simulate_option_cost(euri_sim_joint, ftp_sim_joint, j, tau, utilization, FTP_0) * 10^6
EOS_denom_matrix[i, j] <- simulate_eos_denom(tau, j, euri_sim_joint, utilization) / 10^6
}
}
alpha <- 0.99
medians1 <- rep(NA,10)
for(j in 1:10){
npv_alphas_sim[j] <- (sort(-NPV_matrix[, j]))[ceiling(N * alpha)]
EOS_matrix[, j] <- npv_alphas_sim[j] * EOS_denom_matrix[, j]
medians1[j] <- median(EOS_matrix[, j])
}
(medians1 - medians) * 10^5
set.seed(1)
N <- 20000
NPV_matrix <- matrix(data = NA, nrow = N, ncol = 10)
EOS_denom_matrix <- matrix(data = NA, nrow = N, ncol = 10)
EOS_matrix <- matrix(data = NA, nrow = N, ncol = 10)
npv_alphas_sim <- rep(NA, 10)
for(j in 1:10){
FTP_0 <- ftp_2y[120] + 0.0001 * (j - 2)
for(i in 1:N){
type_var <- rbinom(1, 1, p_typeone)
cancel_client <- rbinom(1,1, p_cancel*1.01)
tau <- 1
sim_joint <- vasi_joint_sim(jointpar_all, j*12, er[120], ftp_2y[120])
ftp_sim_joint <- sim_joint[, 2]
euri_sim_joint <- sim_joint[, 1]
if(cancel_client == 1){
tau <- rbeta(1, beta_coef[1], beta_coef[2])
}
volatility <- rmixgamma(1, mod2_weibull$pi, mod2_weibull$mu, mod2_weibull$sd)
utilization <- simulate_client_utilization(pool_coef, tau, j, volatility, type_var)
NPV_matrix[i, j] <- simulate_option_cost(euri_sim_joint, ftp_sim_joint, j, tau, utilization, FTP_0) * 10^6
EOS_denom_matrix[i, j] <- simulate_eos_denom(tau, j, euri_sim_joint, utilization) / 10^6
}
}
alpha <- 0.99
medians1 <- rep(NA,10)
for(j in 1:10){
npv_alphas_sim[j] <- (sort(-NPV_matrix[, j]))[ceiling(N * alpha)]
EOS_matrix[, j] <- npv_alphas_sim[j] * EOS_denom_matrix[, j]
medians1[j] <- median(EOS_matrix[, j])
}
(medians1 - medians) * 10^5
set.seed(1)
N <- 20000
NPV_matrix <- matrix(data = NA, nrow = N, ncol = 10)
EOS_denom_matrix <- matrix(data = NA, nrow = N, ncol = 10)
EOS_matrix <- matrix(data = NA, nrow = N, ncol = 10)
npv_alphas_sim <- rep(NA, 10)
for(j in 1:10){
FTP_0 <- ftp_2y[120] + 0.0001 * (j - 2)
for(i in 1:N){
type_var <- rbinom(1, 1, p_typeone)
cancel_client <- rbinom(1,1, p_cancel*0.99)
tau <- 1
sim_joint <- vasi_joint_sim(jointpar_all, j*12, er[120], ftp_2y[120])
ftp_sim_joint <- sim_joint[, 2]
euri_sim_joint <- sim_joint[, 1]
if(cancel_client == 1){
tau <- rbeta(1, beta_coef[1], beta_coef[2])
}
volatility <- rmixgamma(1, mod2_weibull$pi, mod2_weibull$mu, mod2_weibull$sd)
utilization <- simulate_client_utilization(pool_coef, tau, j, volatility, type_var)
NPV_matrix[i, j] <- simulate_option_cost(euri_sim_joint, ftp_sim_joint, j, tau, utilization, FTP_0) * 10^6
EOS_denom_matrix[i, j] <- simulate_eos_denom(tau, j, euri_sim_joint, utilization) / 10^6
}
}
alpha <- 0.99
medians1 <- rep(NA,10)
for(j in 1:10){
npv_alphas_sim[j] <- (sort(-NPV_matrix[, j]))[ceiling(N * alpha)]
EOS_matrix[, j] <- npv_alphas_sim[j] * EOS_denom_matrix[, j]
medians1[j] <- median(EOS_matrix[, j])
}
(medians1 - medians) * 10^5
pool_coef
set.seed(1)
N <- 20000
NPV_matrix <- matrix(data = NA, nrow = N, ncol = 10)
EOS_denom_matrix <- matrix(data = NA, nrow = N, ncol = 10)
EOS_matrix <- matrix(data = NA, nrow = N, ncol = 10)
npv_alphas_sim <- rep(NA, 10)
pool_coef[1] <- pool_coef[1]*1.01
for(j in 1:10){
FTP_0 <- ftp_2y[120] + 0.0001 * (j - 2)
for(i in 1:N){
type_var <- rbinom(1, 1, p_typeone)
cancel_client <- rbinom(1,1, p_cancel)
tau <- 1
sim_joint <- vasi_joint_sim(jointpar_all, j*12, er[120], ftp_2y[120])
ftp_sim_joint <- sim_joint[, 2]
euri_sim_joint <- sim_joint[, 1]
if(cancel_client == 1){
tau <- rbeta(1, beta_coef[1], beta_coef[2])
}
volatility <- rmixgamma(1, mod2_weibull$pi, mod2_weibull$mu, mod2_weibull$sd)
utilization <- simulate_client_utilization(pool_coef, tau, j, volatility, type_var)
NPV_matrix[i, j] <- simulate_option_cost(euri_sim_joint, ftp_sim_joint, j, tau, utilization, FTP_0) * 10^6
EOS_denom_matrix[i, j] <- simulate_eos_denom(tau, j, euri_sim_joint, utilization) / 10^6
}
}
alpha <- 0.99
medians1 <- rep(NA,10)
for(j in 1:10){
npv_alphas_sim[j] <- (sort(-NPV_matrix[, j]))[ceiling(N * alpha)]
EOS_matrix[, j] <- npv_alphas_sim[j] * EOS_denom_matrix[, j]
medians1[j] <- median(EOS_matrix[, j])
}
(medians1 - medians) * 10^5
pool_coef[1] <- pool_coef[1]*0.99
pool_coef[1] <- pool_coef[1]*0.99
set.seed(1)
N <- 20000
NPV_matrix <- matrix(data = NA, nrow = N, ncol = 10)
EOS_denom_matrix <- matrix(data = NA, nrow = N, ncol = 10)
EOS_matrix <- matrix(data = NA, nrow = N, ncol = 10)
npv_alphas_sim <- rep(NA, 10)
for(j in 1:10){
FTP_0 <- ftp_2y[120] + 0.0001 * (j - 2)
for(i in 1:N){
type_var <- rbinom(1, 1, p_typeone)
cancel_client <- rbinom(1,1, p_cancel)
tau <- 1
sim_joint <- vasi_joint_sim(jointpar_all, j*12, er[120], ftp_2y[120])
ftp_sim_joint <- sim_joint[, 2]
euri_sim_joint <- sim_joint[, 1]
if(cancel_client == 1){
tau <- rbeta(1, beta_coef[1], beta_coef[2])
}
volatility <- rmixgamma(1, mod2_weibull$pi, mod2_weibull$mu, mod2_weibull$sd)
utilization <- simulate_client_utilization(pool_coef, tau, j, volatility, type_var)
NPV_matrix[i, j] <- simulate_option_cost(euri_sim_joint, ftp_sim_joint, j, tau, utilization, FTP_0) * 10^6
EOS_denom_matrix[i, j] <- simulate_eos_denom(tau, j, euri_sim_joint, utilization) / 10^6
}
}
alpha <- 0.99
medians1 <- rep(NA,10)
for(j in 1:10){
npv_alphas_sim[j] <- (sort(-NPV_matrix[, j]))[ceiling(N * alpha)]
EOS_matrix[, j] <- npv_alphas_sim[j] * EOS_denom_matrix[, j]
medians1[j] <- median(EOS_matrix[, j])
}
(medians1 - medians) * 10^5
set.seed(1)
N <- 20000
NPV_matrix <- matrix(data = NA, nrow = N, ncol = 10)
pool_coef[1] <- pool_coef[1]*1.01
pool_coef
pool_coef[1] <- pool_coef[1]*1.01
pool_coef
pool_coef <- coef(pooled_reg)
pool_coef
set.seed(1)
N <- 20000
NPV_matrix <- matrix(data = NA, nrow = N, ncol = 10)
EOS_denom_matrix <- matrix(data = NA, nrow = N, ncol = 10)
EOS_matrix <- matrix(data = NA, nrow = N, ncol = 10)
npv_alphas_sim <- rep(NA, 10)
pool_coef[2] <- pool_coef[2]*1.01
for(j in 1:10){
FTP_0 <- ftp_2y[120] + 0.0001 * (j - 2)
for(i in 1:N){
type_var <- rbinom(1, 1, p_typeone)
cancel_client <- rbinom(1,1, p_cancel)
tau <- 1
sim_joint <- vasi_joint_sim(jointpar_all, j*12, er[120], ftp_2y[120])
ftp_sim_joint <- sim_joint[, 2]
euri_sim_joint <- sim_joint[, 1]
if(cancel_client == 1){
tau <- rbeta(1, beta_coef[1], beta_coef[2])
}
volatility <- rmixgamma(1, mod2_weibull$pi, mod2_weibull$mu, mod2_weibull$sd)
utilization <- simulate_client_utilization(pool_coef, tau, j, volatility, type_var)
NPV_matrix[i, j] <- simulate_option_cost(euri_sim_joint, ftp_sim_joint, j, tau, utilization, FTP_0) * 10^6
EOS_denom_matrix[i, j] <- simulate_eos_denom(tau, j, euri_sim_joint, utilization) / 10^6
}
}
alpha <- 0.99
medians1 <- rep(NA,10)
for(j in 1:10){
npv_alphas_sim[j] <- (sort(-NPV_matrix[, j]))[ceiling(N * alpha)]
EOS_matrix[, j] <- npv_alphas_sim[j] * EOS_denom_matrix[, j]
medians1[j] <- median(EOS_matrix[, j])
}
(medians1 - medians) * 10^5
pool_coef[2] <- pool_coef[2]/1.01
pool_coef
set.seed(1)
N <- 20000
NPV_matrix <- matrix(data = NA, nrow = N, ncol = 10)
EOS_denom_matrix <- matrix(data = NA, nrow = N, ncol = 10)
EOS_matrix <- matrix(data = NA, nrow = N, ncol = 10)
npv_alphas_sim <- rep(NA, 10)
pool_coef[2] <- pool_coef[2]*0.99
for(j in 1:10){
FTP_0 <- ftp_2y[120] + 0.0001 * (j - 2)
for(i in 1:N){
type_var <- rbinom(1, 1, p_typeone)
cancel_client <- rbinom(1,1, p_cancel)
tau <- 1
sim_joint <- vasi_joint_sim(jointpar_all, j*12, er[120], ftp_2y[120])
ftp_sim_joint <- sim_joint[, 2]
euri_sim_joint <- sim_joint[, 1]
if(cancel_client == 1){
tau <- rbeta(1, beta_coef[1], beta_coef[2])
}
volatility <- rmixgamma(1, mod2_weibull$pi, mod2_weibull$mu, mod2_weibull$sd)
utilization <- simulate_client_utilization(pool_coef, tau, j, volatility, type_var)
NPV_matrix[i, j] <- simulate_option_cost(euri_sim_joint, ftp_sim_joint, j, tau, utilization, FTP_0) * 10^6
EOS_denom_matrix[i, j] <- simulate_eos_denom(tau, j, euri_sim_joint, utilization) / 10^6
}
}
alpha <- 0.99
medians1 <- rep(NA,10)
for(j in 1:10){
npv_alphas_sim[j] <- (sort(-NPV_matrix[, j]))[ceiling(N * alpha)]
EOS_matrix[, j] <- npv_alphas_sim[j] * EOS_denom_matrix[, j]
medians1[j] <- median(EOS_matrix[, j])
}
(medians1 - medians) * 10^5
